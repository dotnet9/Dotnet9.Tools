@page "/tags"
@inject TagService TagService

<PageTitle>@_title</PageTitle>
<h1 class="detail-title">@_title?.ToMarkupString()</h1>

<p>@_description?.ToMarkupString()</p>

<div id="view-content" class="gap-solid"></div>

@if (_tags?.Any() != true)
{
    <div class="read_more">
        这里空空如也
    </div>
}
else
{
    <ul class="cloud" role="navigation" aria-label="Webdev tag cloud">
        @foreach (var tag in _tags)
        {
            <li>
                <a href="/tags/@(WebUtility.UrlEncode(tag.Name))" data-weight="@tag.BlogCount">@tag.Name.ToMarkupString() (@tag.BlogCount)</a>
            </li>
        }
    </ul>
}

@code
{
    string? _title;
    string? _description;
    List<TagBrief>? _tags;

    protected override async Task OnInitializedAsync()
    {
        _title = "标签云";
        _description = "博客网站的标签云是一种展示博客文章标签的可视化工具，通常以云状图形的形式呈现。标签云中，标签的大小和字体的粗细通常表示该标签在博客中出现的频率或重要性。用户可以通过点击标签云中的标签，快速地找到相关主题的文章。标签云也可以帮助博客作者更好地组织和分类自己的文章，方便读者浏览和搜索。";


        _tags = await TagService.GetAllAsync();
    }
}